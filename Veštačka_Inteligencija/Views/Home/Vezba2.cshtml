<title>Vežba 2 - Binarna Stabla Pretrage</title>
<style>
      .sticky {
        position: sticky;
        top: 75px;
      }
</style>

<body>
    <div class="container-fluid">
      <div class="row">
        <nav class="col-md-2 d-none d-md-block bg-sidebar sidebar">
            <div class="sidebar-sticky sticky">
            <h4 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                <div class="card-header text-left" style="padding-left:0px; color:black">
							<span>Sadržaj</span>
						</div>
                <a class="d-flex align-items-center text-muted" >
                <span data-feather="plus-circle"></span>
                </a>
            </h4>
            <ul class="nav flex-column">
                <li class="nav-item">
                <a class="nav-link active" href="#oblast">
                    <span data-feather="home"></span>
                    Objašnjenje oblasti 
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="#kod">
                    <span data-feather="file"></span>
                    Objašnjenje koda
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="#node ">
                    <span data-feather="shopping-cart"></span>
                    Node 
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="#build ">
                    <span data-feather="users"></span>
                    Build 
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="#tree">
                    <span data-feather="bar-chart-2"></span>
                    Tree 
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="#ispis">
                    <span data-feather="layers"></span>
                    Ispis čvorova
                </a>
                </li>
            </ul>

            <h4 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
                <div class="card-header text-left" style="padding-left:0px; color:black">
							<span>Reference</span>
						</div>
                <a class="d-flex align-items-center text-muted" >
                <span data-feather="plus-circle"></span>
                </a>
            </h4>
            <ul class="nav flex-column mb-2">
                <li class="nav-item">
                <a class="nav-link" href="https://www.geeksforgeeks.org/binarytree-module-in-python/" target="_blank">
                    <span data-feather="file-text"></span>
                    GeeksForGeeks
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="https://www.tutorialspoint.com/python_data_structure/python_binary_tree.htm" target="_blank">
                    <span data-feather="file-text"></span>
                    tutorialspoint
                </a>
                </li>
                <li class="nav-item">
                <a class="nav-link" href="https://www.programiz.com/dsa/binary-tree" target="_blank">
                    <span data-feather="file-text"></span>
                    Programiz
                </a>
            </ul>
            </div>
        </nav>

        <div class="col-lg-10 pt-3">
          <div class="text-center card-header">
              <h4>BINARNA STABLA PRETRAGE</h4>
          </div>

          <br />
          <div class="card" id="oblast">
            <div class="card-header text-center">
            <h4 style="color: #151515">Objašnjenje oblasti</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Binarno stablo je struktura podataka u kojoj svaki čvor <b>(Node)</b> ili vrh <b>(Leaf)</b> ima najviše dve grane <b>(Branch)</b>. 
                    U Python-u, binarno stablo može biti predstavljeno na različite načine sa različitim strukturama podataka
                    i prikazima klasa za čvor. Biblioteka binarnog stabla pomaže u direktnoj implementaciji
                    binarnog stabla i importuje sa sledećim kodom:
                    <p class="bgText"> pip install binarytree </p>
                    Primer jednog ovakvog binarnog stabla pretrage se može videti na slici ispod:
                    <div class="col-md-8 offset-md-2">
                        <br />
                        <img class="card-img-top" src="@Url.Content("~/Media/Vezba 2/vezba1slika1.png")">
                    </div>
                </p>
            </div>
          </div>

          <br />
          <div class="card" id="kod">
            <div class="card-header text-center">
            <h4 style="color: #151515">Kod u Python-u i Objašnjenje Koda</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Da bi se realizovalo jedno binarno stablo u python-u, na samom početku je potrebno uvesti samu biblioteku
                    koju ste prethodno instalirali u svom projektu i povući sve funkcije koje se nalaze u toj biblioteci
                </p><br />
               <pre class="python-exec">
                <code>	
    from binarytree import *</code>
            </div>
            <div class="card-body">
                <p class="card-text">Na ovaj način ste uvezli sve potrebne funkcije od kojih su [ Node, build, tree]. Node funkciju ćemo koristiti 
                    za konkretno definisanje Node-a, odnosno čvora jednog stabla. Build se koristi da bi se kreiralo stablo od niza podataka i 
                    tree za kreiranje nasumičnih vrednosti stabla sa dodatnim specifikacijama koji se mogu dodatno definisati. O ovim funkcijama će detaljno
                    biti rečeno u narednom delu stranice.
                </p>
            </div>
          </div>
          
          <br />
          <div class="card" id="node">
            <div class="card-header text-center">
            <h4 style="color: #151515">Node</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Node se koristi za kreiranje svakog zasebnog čvora stabla. Za dodelu vrednosti jednog node-a 
                    mora se pre toga definisati "koren" tj root čvor kao početak stabla. Na taj root node se kasnije dodaju dodatni čvorovi
                    koji su kategorizovani kao leva strana (left) i desna strana (right), na kojima se opet mogu dodavati isti itd. Primer
                    kako bi se kreiralo jedno stablo na ovaj način je:
                </p><br />
                <pre class="python-exec">
                <code>	
    root = Node(1)

    root.left = Node(2)
    root.right = Node(3)
    
    root.left.left = Node(4)
    root.left.right = Node(5)
    root.right.left = Node(6)
    root.right.right = Node(7)

    root.right.right.left = Node(8)


    print('Binary tree :', root)</code>                
            </div>
            <div class="alert alert-light" role="alert">
                <p>Output:
                <pre class="python-exec">
                <code> 
    Binary tree : 
        __1__
       /     \
      2       3__
     / \     /   \
    4   5   6     7
                 /
                8</code></p>
            </div>
          </div>

          <br />
          <div class="card" id="build">
            <div class="card-header text-center">
            <h4 style="color: #151515">Build</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Build funkciju koristimo kada želimo da generišemo binarno stablo od niza podataka. Kada se stablo generiše ono
                    teži da kreira "savršeno" stablo, odnosno da svaki čvor ima levu i desnu stranu. Ukoliko želimo da ne doda čvor, koristimo reč
                    None, ali imajući u vidu da ako kroz generisanje stabla naiđemo na taj čvor, nije moguće dodati na njega dalji čvor. Generisanje
                    stabla se vrši redom, sa leva na desno kroz svaki red redom. Primer koda je sledeći:
                </p><br />
                <pre class="python-exec">
                <code>	
    nodes = [1, 2, 3, 4, 5, 6, 7, None, 9, 10]
    root = build(nodes)
    print('Binary tree :', root)</code>
            </div>
           <div class="alert alert-light" role="alert">
                <p>Output:
                <pre class="python-exec">
                <code> 
    Binary tree : 
          _____1__
         /        \
      __2___       3
     /      \     / \
    4       _5   6   7
     \     /
      9   10</code></p>
            </div>
          </div>
          
          <br />
          <div class="card" id="tree">
            <div class="card-header text-center">
            <h4 style="color: #151515">Tree</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Tree funkcija se koristi za random generisanje stabla sa posebnim opcijama koje možemo sami definisati.
                     Kod pomocu kojeg to možemo uraditi je: 
                </p><br />
                <pre class="python-exec">
                <code>	
    root = tree(height = 4, is_perfect = True)</code>
            </div> 
            <div class="card-body">
            <p class="card-text">U ovom delu smo kreirali nasumično stablo sa 4 nivoa (ne računajući root), i osobinom da bude "savršeno", što znači
                da svaki čvor ima levi i desni čvor ne računajući one u 4tom nivou. Rezultat pokretanja koda je sledeći: 
                </p><br /></div>
           <div class="alert alert-light" role="alert">
                <p>Output:
                <pre class="python-exec">
                <code> 
    Binary tree : 
                        _____________________10__________________
             _________27________                          ________5________
            /                   \                        /                 \
         __28___              ___12___               ___9__              ___13__
        /       \            /        \             /      \            /       \
      _1        _20        _29        _23         _11       24        _18        14
     /  \      /   \      /   \      /   \       /   \     /  \      /   \      /  \
    30   7    22    4    26    8    17    19    21    6   3    15   25    0    2    16</code></p>
            </div>
          </div>

          <br />
          <div class="card" id="ispis">
            <div class="card-header text-center">
            <h4 style="color: #151515">Ispis čvorova</h4>
            </div>
            <div class="card-body">
                <p class="card-text">Sada kada znamo sve ove načine kako formirati stablo moramo znati i kako da predstavimo rezultate u terminalu.
                    Prvi deo je već bio predstavljen gde se samo ispisuje stablo u terminalu i "slikovitom" prikazu. Da bi se lakše predstavili čvorovi
                    stabla postoje tri različita načina sortiranja čvorova pri njihovom ispisu u terminalu. Ta tri tipa sortiranja su:
                    <ul>
                        <li>
                           <p> <b>Preorder Traversal</b> - Način sortiranja koji ispisuje čvorove krenuvši od koren čvora pa redom na levu stranu.
                               Kada se dodje do kraja leve strane, vraća se u jedan čvor unazad pa se ispituje čvor sa desne strane, kada se tu dodje
                               do kraja, opet se vraća polje unazad pa ispituje desni čvor i sve tako dok se ne ispišu svi čvorovi stabla. Ovaj stil
                               sortiranja se drugačije naziva i pretraga stabla u dubinu.</p>
                        </li>
                        <li>
                           <p> <b>Inorder Traversal</b> - Ovaj tip sortiranja je teško definisati kada koristik ispisuje čvorove na listu papira.
                               Rezultat ovog sortiranja se dobija kada se na stablo ispisuju vizuelno redom čvorovi sa leva na desno tako kako 
                               su predstavljeni u temrinalu.</p>
                        </li>
                        <li>
                           <p> <b>Postorder Traversal</b> - Ovaj tip sortiranja se gleda tako što se gledajući sa leva na desno ispisuju svi čvorovi
                               koji pripadaju čvoru koje oni nasleđuju. Kada se ispišu svi ti čvorovi onda se na isti način gleda čvor koji su nasledili.</p>
                        </li>
                        <li>
                           <p> <b>Jednostavan print</b> - Ovo u suštini nije sortiranje nego jednostavan ispis svih čvorova pomoću liste. Ispisuje se tako što se gledajući
                               sa leva na desno ispisuju redom svi čvorovi redom po novoima. Ovaj tip ispisa drugačije naziva pretraga u širinu.</p>
                        </li>
                    </ul>
                </p><br />
                <pre class="python-exec">
                <code>	
   Stablo : 
             ______12________
            /                \
        ___3__             ___7___
       /      \           /       \
      6        5        _14       _9
     / \      / \      /   \     /  \
    8   10   0   2    11    4   13   1</code>
            </div>
             <div class="card-body">
                <p class="card-text">
    Lista : 12, 3, 7, 6, 5, 14, 9, 8, 10, 0, 2, 11, 4, 13, 1<br />
    Preorder : 12, 3, 6, 8, 10, 5, 0, 2, 7, 14, 11, 4, 9, 13, 1<br />
    Inorder : 8, 6, 10, 3, 0, 5, 2, 12, 11, 14, 4, 7, 13, 9, 1<br />
    Postorder : 8, 10, 6, 0, 2, 5, 3, 11, 4, 14, 13, 1, 9, 7, 12<br /><br />
    Uz običan ispis samih čvorova se dodatno može ispisati i specifikacija samog stabla. Neki od tih specifikacija su:
                    <ul>
                        <li>
                           <p> <b>.size</b> - Metoda koja ispisuje broj čvorova stabla.</p>
                        </li>
                        <li>
                           <p> <b>.height</b> - Metoda koja ispisuje broj nivoa stabla.</p>
                        </li>
                        <li>
                           <p> <b>.leaf_count</b> - Metoda za ispis koliko lista (leaf) sadrži stablo.</p>
                        </li>
                        <li>
                           <p> <b>.leaves</b> - Metoda za ispis svih lista stabla.</p>
                        </li>
                    </ul>
                    Postoje još mnogo drugih metoda koje se mogu koristiti. Za širi ispis većine korisnih informacija jednog stabla se koristi .properties metoda.
                </p>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery-slim.min.js"><\/script>')</script>
    <script src="../../assets/js/vendor/popper.min.js"></script>
    <script src="../../dist/js/bootstrap.min.js"></script>
</body>